CREATE TABLE batalha (
    ID_batalha SERIAL PRIMARY KEY,
    Dano_causado INTEGER NOT NULL,
    Controle_Dano INTEGER NOT NULL,
    Ambiente_batalha VARCHAR(100) NOT NULL,
    Dano_sofrido INTEGER NOT NULL
); 

-- Criação da tabela Skill
CREATE TABLE skill (
    ID_jogador INTEGER PRIMARY KEY,
    atq INTEGER NOT NULL,
    FOREIGN KEY (ID_jogador) REFERENCES jogador(ID_personagem)
);

-- Criação da tabela Caracteristicas
CREATE TABLE caracteristicas (
    ID_jogador INTEGER PRIMARY KEY,
    fogo INTEGER NOT NULL,
    agua INTEGER NOT NULL,
    terra INTEGER NOT NULL,
    ar INTEGER NOT NULL,
    FOREIGN KEY (ID_jogador) REFERENCES jogador(ID_personagem)
);

-- Criação da tabela Jogador
CREATE TABLE jogador (
    ID_personagem INTEGER PRIMARY KEY,
    cenario INTEGER NOT NULL,
    tipo_equipamento VARCHAR(50) NOT NULL,
    FOREIGN KEY (ID_personagem) REFERENCES personagem(ID_personagem),
    FOREIGN KEY (cenario) REFERENCES cenario(ID_cenario)
); 

CREATE TABLE IF NOT EXISTS inventario (
    id_inventario INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
    id_personagem INT NOT NULL,
    pods INT NOT NULL, 
    FOREIGN KEY (id_personagem) REFERENCES Personagem(id_personagem) ON DELETE RESTRICT
);


CREATE TABLE IF NOT EXISTS item (
    id_item INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
    nome VARCHAR(50) NOT NULL,                          -- Ex: "Espada Andúril de Aragorn"
    peso NUMERIC(5,2),
    durabilidade INT CHECK (durabilidade >= 0),        
    id_inventario INT,                                 
    FOREIGN KEY (id_inventario) REFERENCES Inventario(id_inventario) ON DELETE RESTRICT
);

CREATE TABLE IF NOT EXISTS arma (
    mãos INT CHECK (mãos > 0), -- Define quantas mãos são necessárias para usar a arma
    dano INT CHECK (dano >= 0), 
    id_item INT PRIMARY KEY, 
    FOREIGN KEY (id_item) REFERENCES Item(id_item) ON DELETE CASCADE
);



CREATE TABLE IF NOT EXISTS armadura (
    id_item INT PRIMARY KEY,
    defesa INT CHECK (defesa >= 0),  -- Defesa da armadura (ex: Cota de Mithril com defesa 90)
    FOREIGN KEY (id_item) REFERENCES Item(id_item) ON DELETE RESTRICT
);

-- Felipe

-- Tabela base para todas as entidades do tipo personagem

CREATE TABLE Personagem (
    ID_personagem SERIAL PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    vida_maxima INT NOT NULL,
    mana_maxima INT NOT NULL,
    habilidade VARCHAR(255),
    dificuldade VARCHAR(50),
    level INT DEFAULT 1,
    resistencia VARCHAR(255),
    dialogo TEXT
);

-- Tabela especializada para NPCs (Non-Player Characters)
-- Herda as características de Personagem

CREATE TABLE NPC (
    ID_personagem INT PRIMARY KEY,
    quest TEXT,
    localizacao VARCHAR(255),
    hora_aparicao TIME,
    CONSTRAINT fk_npc_personagem
        FOREIGN KEY(ID_personagem)
        REFERENCES Personagem(ID_personagem)
        ON DELETE CASCADE
);

-- Tabela especializada para Guias
-- Herda as características de Personagem

CREATE TABLE Guia (
    ID_personagem INT PRIMARY KEY,
    custo_orientacao NUMERIC(10, 2),
    CONSTRAINT fk_guia_personagem
        FOREIGN KEY(ID_personagem)
        REFERENCES Personagem(ID_personagem)
        ON DELETE CASCADE
);

-- Tabela especializada para Comerciantes
-- Herda as características de Personagem

CREATE TABLE Comerciante (
    ID_personagem INT PRIMARY KEY,
    venda_item TEXT,
    compra_item TEXT,
    CONSTRAINT fk_comerciante_personagem
        FOREIGN KEY(ID_personagem)
        REFERENCES Personagem(ID_personagem)
        ON DELETE CASCADE
);
